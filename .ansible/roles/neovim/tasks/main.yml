---
- name: create directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ neovim_dir }}"

- name: install neovim (mac)
  block:
    - name: download neovim (mac)
      ansible.builtin.unarchive:
        src: "https://github.com/neovim/neovim/releases/download/v{{ neovim_version }}/nvim-macos.tar.gz"
        dest: "/usr/local/src/nvim/"
        remote_src: yes
        extra_opts: ["--strip-components=1"]
  when: ansible_distribution == 'MacOSX' 

- name: download neovim (linux)
  ansible.builtin.unarchive:
    src: "https://github.com/neovim/neovim/releases/download/v{{ neovim_version }}/nvim-linux64.tar.gz"
    dest: "/usr/local/src/nvim/"
    remote_src: yes
    extra_opts: ["--strip-components=1"]
  when: ansible_distribution == 'Ubuntu' 

- name: create neovim symlink
  ansible.builtin.file:
    src: "/usr/local/src/nvim/bin/nvim"
    dest: "/usr/local/bin/nvim"
    state: link
    force: yes
  become: yes

- name: copy init.vim
  ansible.builtin.template:
    src: "init.vim.j2"
    dest: "~/.config/nvim/init.vim"

- name: copy config.yml.j2
  ansible.builtin.template:
   src: "config.yml.j2"
   dest: "~/.config/sqls/config.yml"

- name: install neovim plugin
  ansible.builtin.git:
    repo: "https://github.com/{{ item.name }}.git"
    dest: "{{ neovim_plugin_path }}/{{ item.name.split('/')[-1] }}"
    version: "{{ item.version }}"
    update: no
  with_items:
    - "{{ neovim_plugins }}"

- name: install fzf
  ansible.builtin.shell: ./install --all
  args:
    chdir: "{{ neovim_plugin_path }}/fzf"

- name: download plantuml
  ansible.builtin.get_url:
    url: "https://jaist.dl.sourceforge.net/project/plantuml/1.2021.12/plantuml.1.2021.12.jar"
    dest: "~/lib/java/plantuml.jar"
    mode: 0755

- name: copy plantuml
  ansible.builtin.copy:
    src: "plantuml"
    dest: "/usr/local/bin/plantuml"
    mode: 0755
  become: yes

- name: get brew prefix
  shell: brew --prefix
  register: brew_prefix
  changed_when: false
  when: ansible_distribution == 'MacOSX' 

- name: create java symlink
  ansible.builtin.file:
    src: "{{ brew_prefix.stdout }}/opt/openjdk/libexec/openjdk.jdk"
    dest: "/Library/Java/JavaVirtualMachines/openjdk.jdk"
    state: link
  become: yes
  when: ansible_distribution == 'MacOSX' 
  ignore_errors: yes

