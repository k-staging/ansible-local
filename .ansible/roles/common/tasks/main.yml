---
- name: create directory
  ansible.builtin.file:
    path: "~/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ working_directory }}"

- name: create /usr/local/bin
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: 0755
  become: yes

- name: change permission /usr/local/src
  ansible.builtin.file:
    path: /usr/local/src
    state: directory
    mode: 0777
  become: yes

- name: setup Ubuntu
  block:
    - name: add redis apt repository
      ansible.builtin.apt_repository:
        repo: ppa:redislabs/redis

    - name: apt install
      ansible.builtin.apt:
        pkg: "{{ item }}"
        update_cache: yes
        force: yes
      become: yes
      with_items:
        - "{{ common_pkg }}"
        - "{{ apt_pkg }}"

    - name: create a symbolic link
      ansible.builtin.file:
        src: /usr/share/zoneinfo/Asia/Tokyo
        dest: /etc/localtime
        owner: root
        group: root
        state: link
        force: yes
      become: yes

    - name:
      ansible.builtin.unarchive:
        src: "https://github.com/equalsraf/win32yank/releases/download/v0.0.4/win32yank-x64.zip"
        dest: "~/bin"
        mode: "0755"
        remote_src: True

    - name: update wsl.conf
      ansible.builtin.template:
        src: wsl.conf.j2
        dest: /etc/wsl.conf
        owner: root
        group: root
      become: yes
  when: ansible_distribution in ['Ubuntu', 'Debian']

- name: setup MacOSX
  block:
    - name: brew install
      community.general.homebrew:
        name: "{{ item }}"
        state: latest
        update_homebrew: yes
      with_items:
        - "{{ common_pkg }}"
        - "{{ brew_pkg }}"

    - name: brew linked pkg-config
      community.general.homebrew:
        name: pkg-config
        state: linked

    - name: install google-chrome
      community.general.homebrew_cask:
        name: "google-chrome"
        state: present
      ignore_errors: yes

    - name: install iterm2
      community.general.homebrew_cask:
        name: "iterm2"
        state: present
      ignore_errors: yes

    - name: install slack
      community.general.homebrew_cask:
        name: "slack"
        state: present
      ignore_errors: yes

    - name: install docker
      community.general.homebrew_cask:
        name: "docker"
        state: present
      ignore_errors: yes

    - name: install dotnet-sdk
      community.general.homebrew_cask:
        name: "dotnet-sdk"
        state: present
      ignore_errors: yes

    - name: get bash path
      shell: brew --prefix bash
      register: bash_path
      changed_when: false
      environment:
        PATH: /opt/homebrew/bin:{{ ansible_env.PATH }}

    - name: edit /etc/shells
      ansible.builtin.lineinfile:
        dest: /etc/shells
        line: "{{ bash_path.stdout }}/bin/bash"
      become: yes

    - name: chsh
      ansible.builtin.command: "chsh -s {{ bash_path.stdout }}/bin/bash {{ ansible_user_id }}"
      become: yes

    - name: download iTerm2-Color-Schemes
      ansible.builtin.git:
        repo: "https://github.com/mbadolato/iTerm2-Color-Schemes.git"
        dest: "/usr/local/src/iTerm2-Color-Schemes"
        update: no

    - name: set gruvbox dark
      ansible.builtin.shell: sh ./tools/import-scheme.sh "Gruvbox Dark"
      args:
        chdir: "/usr/local/src/iTerm2-Color-Schemes"
  when: ansible_distribution == 'MacOSX' 

- name: copy config files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "~/{{ item }}"
    mode: 0644
  with_items:
    - "{{ config_files }}"

- name: copy ssh config files
  ansible.builtin.copy:
    src: "config"
    dest: "~/.ssh/config"
    mode: 0644

- name: download git-completion.bash
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
    dest: ~/bin/git-completion.bash
    mode: 0755

- name: download git-prompt.sh
  get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    dest: ~/bin/git-prompt.sh
    mode: 0755

- name: install dotnet
  ansible.builtin.command: "dotnet tool install --global csharp-ls"
  ignore_errors: yes

